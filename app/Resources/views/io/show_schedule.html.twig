{% extends 'base.html.twig' %}

{% block title %}Plan zajęć{% endblock %}
{% block body %}

    {#<a data-toggle="modal" href="{{ path('show_edit', {'id': '16'}) }}" data-target="#editmodal" class="btn btn-default">click me</a>#}

    <div id="message" class="ui-corner-all">
        <button id="messageCloseButton" type="button" class="close" >&times;</button>
        <div id="messageData"></div>
        <button id="editmodalbtnedit" data-toggle="modal" href="#" data-target="#editmodal" class="btn btn-primary">Edit</button>
        <button id="editmodalbtndelete" class="btn btn-danger" data-href="#" data-toggle="modal" data-target="#confirm-delete">Delete</button>
    </div>

    <div  style="display: none;"  class="modal fade" id="editmodal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel"  aria-hidden="true"></div>

    <div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="deleteModalLabel">Confirm Delete</h4>
                </div>

                <div class="modal-body" id="confirm-delete-modal-body">
                    <p>Do you want to proceed?</p>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <a class="btn btn-danger btn-ok">Delete</a>
                </div>
            </div>
        </div>
    </div>

    <h1>Preview/edit timetable</h1>

    <p class="description">
        Program umożliwia zobaczenie planu zajęć w wersji graficznej i ręcznego
        wprowadzania korekt.
        {#Please Note ***. This demo uses static json data. For this reason, in#}
        {#order to see any event data, please edit events.json to use current dates.#}
    </p>

    {% if form is defined %}
        {{ form_start(form) }}
        {{ form_widget(form) }}
        {{ form_end(form) }}
    {% endif %}

    <div id="calendar"></div>

{% endblock %}

{% block stylesheets %}
    {#<link rel='stylesheet' type='text/css' href="{{ asset('css/jquery-ui-1.8.11.custom.css') }}" />#}
    <link rel='stylesheet' type='text/css' href="{{ asset('show/css/jquery-ui.css') }}" />
    <link rel='stylesheet' type='text/css' href="{{ asset('show/css/jquery.weekcalendar.css') }}" />
    <style type='text/css'>
        /*body {*/
            /*font-family: "Lucida Grande",Helvetica,Arial,Verdana,sans-serif;*/
            /*margin: 0;*/
        /*}*/

        h1 {
            margin: 0;
            padding: 0.5em;
        }

        p.description {
            font-size: 0.8em;
            padding: 0 1em 1em;
            margin: 0;
        }

        #message {
            /*font-size: 0.7em;*/
            position: fixed;
            top: 1em;
            right: 1em;
            width: 350px;
            display: none;
            padding: 1em;
            background: #ffc;
            border: 1px solid #dda;
            z-index: 1;
        }
        .wc-business-hours {
            color: #333;
            font-size: inherit;
        }
    </style>
{% endblock %}


{% block javascripts %}
    {#<script type="text/javascript" src="{{ asset('show/js/jquery.min.js') }}"></script>#}
    {#<script type="text/javascript" src="{{ asset('js/jquery-migrate.js') }}"></script>#}
    <script type="text/javascript" src="{{ asset('show/js/jquery-ui.js') }}"></script>
    <script type="text/javascript" src="{{ asset('show/js/date.js') }}"></script>
    <script type="text/javascript" src="{{ asset('show/js/jquery.weekcalendar.js') }}"></script>
    <script type="text/javascript">
        {% if slug is not null and id is not null %}
        /// jquery migrate
        var matched, browser;

        jQuery.uaMatch = function( ua ) {
            ua = ua.toLowerCase();

            var match = /(chrome)[ \/]([\w.]+)/.exec( ua ) ||
                    /(webkit)[ \/]([\w.]+)/.exec( ua ) ||
                    /(opera)(?:.*version|)[ \/]([\w.]+)/.exec( ua ) ||
                    /(msie)[\s?]([\w.]+)/.exec( ua ) ||
                    /(trident)(?:.*? rv:([\w.]+)|)/.exec( ua ) ||
                    ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec( ua ) ||
                    [];

            return {
                browser: match[ 1 ] || "",
                version: match[ 2 ] || "0"
            };
        };

        matched = jQuery.uaMatch( navigator.userAgent );
        //IE 11+ fix (Trident)
        matched.browser = matched.browser == 'trident' ? 'msie' : matched.browser;
        browser = {};

        if ( matched.browser ) {
            browser[ matched.browser ] = true;
            browser.version = matched.version;
        }

        // Chrome is Webkit, but Webkit is also Safari.
        if ( browser.chrome ) {
            browser.webkit = true;
        } else if ( browser.webkit ) {
            browser.safari = true;
        }

        jQuery.browser = browser;
        // log removed - adds an extra dependency
        //log(jQuery.browser)

        //==============================-

        // First, checks if it isn't implemented yet.
        if (!String.prototype.format) {
            String.prototype.format = function() {
                var args = arguments;
                return this.replace(/{(\d+)}/g, function(match, number) {
                    return typeof args[number] != 'undefined'
                            ? args[number]
                            : match
                            ;
                });
            };
        }

        //===========================
        /*
         * date formatting is adapted from
         * http://jacwright.com/projects/javascript/date_format
         */
//        _formatDate: function(date, format) {
//            var returnStr = '';
//            for (var i = 0; i < format.length; i++) {
//                var curChar = format.charAt(i);
//                if (i != 0 && format.charAt(i - 1) == '\\') {
//                    returnStr += curChar;
//                }
//                else if (this._replaceChars[curChar]) {
//                    returnStr += this._replaceChars[curChar](date, this);
//                } else if (curChar != '\\') {
//                    returnStr += curChar;
//                }
//            }
//            return returnStr;
//        };
//
//        _replaceChars: {
//
//            G: function(date) { return date.getHours(); },
//            h: function(date) { return ((date.getHours() % 12 || 12) < 10 ? '0' : '') + (date.getHours() % 12 || 12); },
//            H: function(date) { return (date.getHours() < 10 ? '0' : '') + date.getHours(); },
//            i: function(date) { return (date.getMinutes() < 10 ? '0' : '') + date.getMinutes(); },
//            s: function(date) { return (date.getSeconds() < 10 ? '0' : '') + date.getSeconds(); },
//            u: function(date) { var m = date.getMilliseconds(); return (m < 10 ? '00' : (m < 100 ? '0' : '')) + m; },
//            // Timezone
//            e: function(date) { return 'Not Yet Supported'; },
//            I: function(date) { return 'Not Yet Supported'; },
//            O: function(date) { return (-date.getTimezoneOffset() < 0 ? '-' : '+') + (Math.abs(date.getTimezoneOffset() / 60) < 10 ? '0' : '') + (Math.abs(date.getTimezoneOffset() / 60)) + '00'; },
//            P: function(date) { return (-date.getTimezoneOffset() < 0 ? '-' : '+') + (Math.abs(date.getTimezoneOffset() / 60) < 10 ? '0' : '') + (Math.abs(date.getTimezoneOffset() / 60)) + ':00'; }, // Fixed now
//            T: function(date) { var m = date.getMonth(); date.setMonth(0); var result = date.toTimeString().replace(/^.+ \(?([^\)]+)\)?$/, '$1'); date.setMonth(m); return result;},
//            Z: function(date) { return -date.getTimezoneOffset() * 60; },
//            // Full Date/Time
//            c: function(date, calendar) { return calendar._formatDate(date, 'Y-m-d\\TH:i:sP'); }, // Fixed now
//            r: function(date, calendar) { return calendar._formatDate(date, 'D, d M Y H:i:s O'); },
//            U: function(date) { return date.getTime() / 1000; }
//        },

        //===========================

//        var year = new Date().getFullYear();
//        var month = new Date().getMonth();
//        var day = new Date().getDate();


        $(document).ready(function() {
            $('#calendar').weekCalendar({
//      data: 'events.json',
                data: '{{ path("show_eventsjson", {'slug': slug, 'id': id}) }}',
                date: new Date('2007-01-01T8:00:00.000+01:00'),
                minDate: new Date('2007-01-01T13:15:00.000+10:00'),
                maxDate: new Date('2007-01-07T13:15:00.000+10:00'),
//                switchDisplay: {'1 day': 1,'3 days': 3,'Work week': 5, 'Full week': 7},
//                switchDisplay: {'Full week': 7},
                timeslotsPerHour: 4,


                //--------------------------
                use24Hour: true,
                timeFormat: null,
                headerSeparator: '',
                dateFormat: '',
                firstDayOfWeek: 1,
                // 0 = Sunday, 1 = Monday, 2 = Tuesday, ... , 6 = Saturday
                businessHours: {start: 8, end: 16, limitDisplay: false},
                timeslotHeight: 12,
                buttons: false,
                allowEventDelete: false,
                allowCalEventOverlap: true,
                overlapEventsSeparate: true,
//                totalEventsWidthPercentInOneColumn: 100,
                readonly: true,
                allowEventCreation: false,

                title: false,

                //--------------------------

                height: function($calendar) {
                    return $(window).height() - $('h1').outerHeight() - $('.description').outerHeight();
                },
                eventRender: function(calEvent, $event) {
                    if (calEvent.end.getTime() < new Date().getTime()) {
                        $event.css('backgroundColor', '#aaa');
                        $event.find('.time').css({
                            backgroundColor: '#999',
                            border:'1px solid #888'
                        });
                    }
                },
//                eventNew: function(calEvent, $event) {
//                    displayMessage('<strong>Added event</strong><br/>Start: ' + calEvent.start + '<br/>End: ' + calEvent.end);
//                    alert('You\'ve added a new event. You would capture this event, add the logic for creating a new event with your own fields, data and whatever backend persistence you require.');
//                },
//                eventDrop: function(calEvent, $event) {
//                    displayMessage('<strong>Moved Event</strong><br/>Start: ' + calEvent.start + '<br/>End: ' + calEvent.end);
//                },
                eventResize: function(calEvent, $event) {
                    displayMessage('<strong>Resized Event</strong><br/>Start: ' + calEvent.start + '<br/>End: ' + calEvent.end);
                },
                eventClick: function(calEvent, $event) {
                    //displayMessage('<strong>'+calEvent.title+'</strong><br/>ID: ' + calEvent.id + '<br/>Start: ' + calEvent.start.getHours() + '<br/>End: ' + calEvent.end);
//                    displayMessage('<strong>'+calEvent.title+'</strong><br/>ID: ' + calEvent.id + '<br/>Start: ' + calEvent.start.getHours() + '<br/>End: ' + calEvent.end);

                    //var button = "<a data-toggle=\"modal\" href=\""+editurl+"\" data-target=\"#editmodal\" class=\"btn btn-default\">Edit</a>";
                    longDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
                    calendar = $('#calendar');

                    displayMessage("{0}<br/><br/>{3} {1} - {2}<br/>".format(calEvent.title,
                            calendar.weekCalendar('formatTime', calEvent.start),
                            calendar.weekCalendar('formatTime', calEvent.end), longDays[calEvent.start.getDay()]));
                    addHandleModalJS(calEvent.id);
                },
//                eventMouseover: function(calEvent, $event) {
//                    displayMessage('<strong>Mouseover Event</strong><br/>Start: ' + calEvent.start + '<br/>End: ' + calEvent.end);
//                },
//                eventMouseout: function(calEvent, $event) {
//                    displayMessage('<strong>Mouseout Event</strong><br/>Start: ' + calEvent.start + '<br/>End: ' + calEvent.end);
//                },
//                noEvents: function() {
//                    displayMessage('There are no events for this week');
//                },
//                reachedmindate: function($calendar, date) {
//                    displayMessage('You reached mindate');
//                },
//                reachedmaxdate: function($calendar, date) {
//                    displayMessage('You cannot go further');
//                }
            });

            function displayMessage(message) {
                $('#messageData').html(message);
//                $('#message').html(message).fadeIn();
                $('#message').fadeIn();
            }




//            $('<div id="message" class="ui-corner-all"></div>').prependTo($('body'));
        });


        // ======================
        // modal

        $('[data-toggle="modal"]').click(function(e) {
            e.preventDefault();
            if($('#editmodal').attr('aria-hidden'))
            {
                var url = $(this).attr('href');
                if (typeof url !== 'undefined' && url.indexOf('#') == 0)
                {
                    $(url).modal('open');
                } else {
                    $.get(url, function(data){
                        $('#editmodal').html(data);
                    });
//                            .success(function(){
//                        $('input:text:visible:first').focus();
//                    });
                }
            }

//                if($('#confirm-delete').attr('aria-hidden'))
//                {
//                    $('#confirm-delete-modal-body').html("dupa");
//                }
        });

        $('#confirm-delete').on('show.bs.modal', function(e) {
//            $(this).find('.btn-ok').attr('href', $(e.relatedTarget).data('href'));
            $(this).find('.btn-ok').click(function(e2){
                e.preventDefault();

                $.ajax({
                    type: "POST",
                    url: $(e.relatedTarget).data('href'),
                })
                        .done(function (data) {
//                                if (typeof data.message !== 'undefined') {
//                                    alert(data.message);
//                                }
                            $('#confirm-delete').modal('hide');
                            $("#message").fadeOut();
                            $('#calendar').weekCalendar('refresh');
                        })
                        .fail(function (jqXHR, textStatus, errorThrown) {
//                                if (typeof jqXHR.responseJSON !== 'undefined') {
//                                    if (jqXHR.responseJSON.hasOwnProperty('form')) {
//                                        $('#form_body').html(jqXHR.responseJSON.form);
//                                    }
//
//                                    $('.form_error').html(jqXHR.responseJSON.message);
//
//                                } else {
                            alert(errorThrown);
//                                }

                        });
            });
        });


        function addHandleModalJS(id) {
            var editurl = "{{ path('show_edit', {'id': 'idToPut'}) }}";
            editurl = editurl.replace("idToPut", id);
            $("#editmodalbtnedit").attr("href", editurl);

            var deleteurl = "{{ path('show_delete', {'id': 'idToPut'}) }}";
            deleteurl = deleteurl.replace("idToPut", id);
            $("#editmodalbtndelete").attr("data-href", deleteurl);

        }

        //================
        $("#messageCloseButton").click(function() {
            $("#message").fadeOut();
        });

        {% endif %}

        // =================
        // filtering
        var $type = $('#form_type');

        $type.change(function() {
//            // ... retrieve the corresponding form.
//            var $form = $(this).closest('form');
//            // Simulate form data, but only include the selected sport value.
//            var data = {};
//            data[$type.attr('name')] = $type.val();
//            // Submit data via AJAX to the form's action path.
////            $.ajax({
////                url : $form.attr('action'),
////                type: $form.attr('method'),
////                data : data,
////                success: function(html) {
////                    // Replace current position field ...
////                    $('#timetable_view_test').replaceWith(
////                            // ... with the returned one from the AJAX response.
////                            $(html).find('#timetable_view_test')
////                    );
////                    // Position field now displays the appropriate positions.
////                }
////            });
            if ($type.val() != "") {
                var url = '{{ path("show_root") }}';
                url += '/' + $type.val();

                $(location).attr('href', url);
            }
        });

        var $options = $('#form_options');

        $options.change(function() {
            if ($type.val() != "" && $options.val() != "") {
                var url = '{{ path("show_root") }}';
                url += '/' + $type.val();
                url += '/' + $options.val();

                $(location).attr('href', url);
            }
        });


    </script>
{% endblock %}